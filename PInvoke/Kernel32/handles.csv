Namespace,ParentClassName,HandleName,InterfaceName,SummaryText,ClassName,BaseClassName,CloseCode,InheritedHandleName
Vanara.PInvoke,Kernel32,PACKAGEDEPENDENCY_CONTEXT,IHandle,Provides a handle to a package dependency context.,,,,
Vanara.PInvoke,Kernel32,HHEAP,IHandle,Provides a handle to a heap.,SafeHHEAP,SafeHANDLE,HeapDestroy(this),
Vanara.PInvoke,Kernel32,HIORING,IHandle,Provides a handle to a IO Ring.,SafeHIORING,SafeHANDLE,CloseIoRing(handle).Succeeded,
Vanara.PInvoke,Kernel32,HJOB,ISyncHandle,Provides a handle to a job object.,SafeHJOB,SafeSyncHandle,,
Vanara.PInvoke,Kernel32,HRSRC,IHandle,Provides a handle to a resource.,,,,
Vanara.PInvoke,Kernel32,HRSRCDATA,IHandle,Provides a handle to resource data.,,,,
Vanara.PInvoke,Kernel32,HPIPE,IKernelHandle,Provides a handle to a pipe.,SafeHPIPE,SafeHFILE,,HFILE
Vanara.PInvoke,Kernel32,BoundaryDescriptorHandle,IHandle,Provides a handle to a boundary descriptor.,SafeBoundaryDescriptorHandle,SafeHANDLE,{ DeleteBoundaryDescriptor(handle); return true; },
Vanara.PInvoke,Kernel32,NamespaceHandle,IHandle,Provides a handle to a private namespace.,SafeNamespaceHandle,SafeHANDLE,"ClosePrivateNamespace(handle, flag)",
Vanara.PInvoke,Kernel32,HPSS,IHandle,Provides a handle to a target snapshot.,SafeHPSS,SafeHANDLE,"PssFreeSnapshot(ProcessHandle, handle).Succeeded",
Vanara.PInvoke,Kernel32,HPSSWALK,IHandle,Provides a handle to a wall marker.,SafeHPSSWALK,SafeHANDLE,PssWalkMarkerFree(handle).Succeeded,
Vanara.PInvoke,Kernel32,PTP_CLEANUP_GROUP,IHandle,Provides a handle to a pool cleanup group.,SafePTP_CLEANUP_GROUP,SafeHANDLE,{ if (AutoCloseMembers) CloseMembers(false); CloseThreadpoolCleanupGroup(handle); return true; },
Vanara.PInvoke,Kernel32,PTP_IO,IHandle,Provides a handle to a threadpool IO.,SafePTP_IO,SafeHANDLE,{ CloseThreadpoolIo(handle); return true; },
Vanara.PInvoke,Kernel32,PTP_POOL,IHandle,Provides a handle to a thread pool.,SafePTP_POOL,SafeHANDLE,{ CloseThreadpool(handle); return true; },
Vanara.PInvoke,Kernel32,PTP_TIMER,IHandle,Provides a handle to a threadpool timer.,SafePTP_TIMER,SafeHANDLE,{ CloseThreadpoolTimer(handle); return true; },
Vanara.PInvoke,Kernel32,PTP_WAIT,IHandle,Provides a handle to a threadpool wait.,SafePTP_WAIT,SafeHANDLE,{ CloseThreadpoolWait(handle); return true; },
Vanara.PInvoke,Kernel32,PTP_WORK,IHandle,Provides a handle to a threadpool work.,SafePTP_WORK,SafeHANDLE,{ CloseThreadpoolWork(handle); return true; },
Vanara.PInvoke,Kernel32,TimerQueueHandle,IHandle,Provides a handle to a timer queue.,SafeTimerQueueHandle,SafeHANDLE,"DeleteTimerQueueEx(this, CompletionEvent ?? SafeEventHandle.Null)",
Vanara.PInvoke,Kernel32,TimerQueueTimerHandle,IHandle,Provides a handle to a timer queue timer.,,,,
Vanara.PInvoke,Kernel32,HSNAPSHOT,IKernelHandle,Provides a handle to a snapshot.,SafeHSNAPSHOT,SafeKernelHandle,,
Vanara.PInvoke,Kernel32,HACTCTX,IHandle,Provides a handle to an account context.,SafeHACTCTX,SafeHANDLE,{ ReleaseActCtx(this); return true; },
Vanara.PInvoke,Kernel32,PerformanceDataHandle,IHandle,A performance data handle.,SafePowerRequestObject,SafeKernelHandle,,
Vanara.PInvoke,Kernel32,HLOCAL,IHandle,Provides a handle to a local heap allocation.,,,,
Vanara.PInvoke,Kernel32,HGLOBAL,IHandle,Provides a handle to heap allocated memory.,,,,
Vanara.PInvoke,Kernel32,HUPDRES,IHandle,Provides a handle to an update resource.,SafeHUPDRES,SafeHANDLE,"EndUpdateResource(handle, IgnoreChanges)",
Vanara.PInvoke,Kernel32,HTRXN,IKernelHandle,Provides a handle to a transaction.,,,,
Vanara.PInvoke,Kernel32,PUMS_COMPLETION_LIST,IHandle,Provides a handle to a completion list.,SafePUMS_COMPLETION_LIST,SafeHANDLE,DeleteUmsCompletionList(handle),
Vanara.PInvoke,Kernel32,PUMS_CONTEXT,IHandle,Provides a handle to a UMS context.,SafePUMS_CONTEXT,SafeHANDLE,DeleteUmsThreadContext(handle),
Vanara.PInvoke,Kernel32,HPCON,IHandle,Provides a handle to a psuedo console.,SafeHPCON,SafeHANDLE,{ ClosePseudoConsole(handle); return true; },
