<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Description>This library includes shared methods, structures and constants for use throughout the Vanara assemblies. Think of it as windows.h with some useful extensions. It includes:
* Extension methods for working with enumerated types (enum), FILETIME, and method and property extractions via reflection
* Extension and helper methods to marshaling structures arrays and strings
* SafeHandle based classes for working with memory allocated via CoTaskMem, HGlobal, or Local calls that handles packing and extracting arrays, structures and raw memory
* Safe pinning of objects in memory
* Memory stream based on marshaled memory</Description>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <AssemblyName>Vanara.Core</AssemblyName>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageTags>vanara;net-extensions;interop</PackageTags>
    <PackageReleaseNotes>Currently implements:

Classes
AddAsCtorAttribute, AddAsMemberAttribute, AdjustAutoMethodNamePatternAttribute, AlignedMemory&lt;T&gt;, AppendedStringAttribute, ArrayAttribute, AutoHandleAttribute, AutoSafeHandleAttribute, BeginEndEventContext, BitFieldAttribute&lt;T&gt;, BitHelper, ByteSizeFormatter, CloseHandleFunc, ComConnectionPoint, ComEnumString, ComReleaser&lt;T&gt;, ComReleaserFactory, ComStream, ComTypeExtensions, ConstantConversionExtensions, CorrespondingTypeAttribute, CoTaskMemoryMethods, DeferAutoMethodFromAttribute, EnumerableEqualityComparer&lt;T&gt;, EnumExtensions, EventedList&lt;T&gt;, FileTimeExtensions, FixedStringAttribute, Formatter, FormatterComposer, GenericSafeHandle, GenericVirtualReadOnlyDictionary&lt;T&gt;, GuidToStringMarshaler, HexDumpHelpers, HGlobalMemoryMethods, History&lt;T&gt;, IArrayStructExtensions, IArrayStructMarshaler&lt;T&gt;, IgnoreAttribute, InteropExtensions, IntPtrConverter, IOExtensions, LibHelper, LinqHelpers, ListChangedEventArgs&lt;T&gt;, MarshaledAlternativeAttribute, MarshaledAttribute, Marshaler, MarshalerOptions, MarshalException, MarshalFieldAs, MarshalingStream, Matrix, Matrix&lt;T&gt;, MemoryMethodsBase, NativeMemoryEnumerator&lt;T&gt;, NativeMemoryStream, PinnedObject, ReflectionExtensions, ReflectionExtensions, SafeAllocatedMemoryHandle, SafeAllocatedMemoryHandleBase, SafeByteArray, SafeCoTaskMemHandle, SafeCoTaskMemString, SafeCoTaskMemStruct&lt;T&gt;, SafeGuidPtr, SafeHANDLE, SafeHGlobalHandle, SafeHGlobalStruct&lt;T&gt;, SafeLPSTR, SafeLPTSTR, SafeLPWSTR, SafeMemoryHandle&lt;T&gt;, SafeMemoryHandleExt&lt;T&gt;, SafeMemoryPool&lt;T&gt;, SafeMemString&lt;T&gt;, SafeMemStruct&lt;T&gt;, SizeDefAttribute, SizeFieldNameAttribute, SizeFieldNameAttributeExt, SizeOfAttribute, SpanAction, SparseArray&lt;T&gt;, StringHelper, StructPtrAttribute, SuppressAutoGenAttribute, TryGetDelegate, TryGetValueDelegate, UnionHelper, UntypedNativeMemoryEnumerator, VanaraCustomMarshaler&lt;T&gt;, VanaraMarshaler, VanaraMarshalerAttribute, VirtualDictionary&lt;T&gt;, VirtualList&lt;T&gt;, VirtualListMethodCarrier&lt;T&gt;, VirtualReadOnlyDictionary&lt;T&gt;, VirtualReadOnlyList&lt;T&gt;

Structures
AnySizeStructFieldArray&lt;T&gt;, AnySizeStructUnmanagedFieldArray&lt;T&gt;, ArrayPointer&lt;T&gt;, BitField&lt;T&gt;, BOOL, BOOLEAN, EnumFlagIndexer&lt;T&gt;, GuidPtr, IUnknownPointer&lt;T&gt;, LPCSTRArrayPointer, LPCTSTRArrayPointer, LPCWSTRArrayPointer, ManagedArrayPointer&lt;T&gt;, ManagedStructPointer&lt;T&gt;, RefEnumerator&lt;T&gt;, SizeT, StrPtrAnsi, StrPtrAuto, StrPtrUni, StructPointer&lt;T&gt;, time_t

Enumerations
ArrayLayout, Bitness, CorrespondingAction, FileAttributeConstant, FileOpConstant, FilePermissionConstant, LayoutModel, SizingMethod, StringEncoding, StringListPackMethod

</PackageReleaseNotes>
    <PackageReadmeFile>pkgreadme.md</PackageReadmeFile>
  </PropertyGroup>
  <ItemGroup Condition=" $(NETSTANDARD2_0) ">
    <PackageReference Include="System.ValueTuple" />
  </ItemGroup>
  <ItemGroup Condition=" $(NET40_OR_GREATER) Or $(NETSTANDARD2_0) ">
    <PackageReference Include="System.Memory" />
  </ItemGroup>
  <ItemGroup Condition=" $(NETSTANDARD2_1) ">
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="InteropServices\SafeIDispatch.cs" />
    <Compile Remove="InteropServices\StructMarshaler.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="InteropServices\SafeIDispatch.cs" />
    <None Include="InteropServices\StructMarshaler.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="InteropServices\SafeLPSTR.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SafeLPSTR.tt</DependentUpon>
    </Compile>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Update="InteropServices\SafeLPSTR.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SafeLPSTR.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
</Project>